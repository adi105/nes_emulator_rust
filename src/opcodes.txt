// File to store 6502 OPcodes in a neat fashion. There are a lot.
use crate::cpu::AddressingMode;
use std::collections::HashMap;
// struct for each opcode
pub struct OpCode {
    pub code:u8,
    pub mnemonic: &'static str,
    pub length: u8,
    pub cycles: u8,
    pub mode: AddressingMode,
}

impl OpCode {
    fn new(code: u8, mnemonic: &'static str, length: u8, cycles: u8, mode: AddressingMode) -> Self {
        OpCode {
            code : code,
            mnemonic : mnemonic,
            length : length,
            cycles : cycles,
            mode : mode,
        }
    }
}

lazy_static! {
    pub static ref CPU_OP_CODES: Vec<OpCode> = vec![
        ** implement directly in switch
        // opcode list taken from online resource 


        /* Flags clear */

        OpCode::new(0xD8, "CLD", 1, 2, AddressingMode::NoneAddressing),
        OpCode::new(0x58, "CLI", 1, 2, AddressingMode::NoneAddressing),
        OpCode::new(0xb8, "CLV", 1, 2, AddressingMode::NoneAddressing),
        OpCode::new(0x18, "CLC", 1, 2, AddressingMode::NoneAddressing),
        OpCode::new(0x38, "SEC", 1, 2, AddressingMode::NoneAddressing),
        OpCode::new(0x78, "SEI", 1, 2, AddressingMode::NoneAddressing),
        OpCode::new(0xf8, "SED", 1, 2, AddressingMode::NoneAddressing),

        OpCode::new(0xba, "TSX", 1, 2, AddressingMode::NoneAddressing),
        OpCode::new(0x8a, "TXA", 1, 2, AddressingMode::NoneAddressing),
        OpCode::new(0x9a, "TXS", 1, 2, AddressingMode::NoneAddressing),
        OpCode::new(0x98, "TYA", 1, 2, AddressingMode::NoneAddressing),

        
        /* Stack */
        OpCode::new(0x48, "PHA", 1, 3, AddressingMode::NoneAddressing),
        **
    ];

}